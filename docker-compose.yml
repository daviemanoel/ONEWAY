services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=oneway_db
      - POSTGRES_USER=oneway
      - POSTGRES_PASSWORD=senha_segura_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oneway -d oneway_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx - Proxy Reverso
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./:/usr/share/nginx/html/static
    depends_on:
      - django
      - nodejs
    restart: unless-stopped

  # Django Admin
  django:
    build:
      context: ./django_admin
    environment:
      - DEBUG=${DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && python criar_dados_exemplo.py && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django_admin:/app
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Node.js API
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile.nodejs
    environment:
      - PORT=3000
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - MERCADOPAGO_ACCESS_TOKEN=${MERCADOPAGO_ACCESS_TOKEN}
      - DJANGO_API_TOKEN=${DJANGO_API_TOKEN}
      - DJANGO_API_URL=${DJANGO_API_URL:-http://django:8000/api}
    expose:
      - "3000"
    depends_on:
      django:
        condition: service_started
    restart: unless-stopped

volumes:
  django_static:
  postgres_data: